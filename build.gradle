plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'org.xorko'
version '1.0-SNAPSHOT'

/**
 * Workaround to compile JavaFX custom components for importation in Scene Builder:
 * Uncomment these lines, then build the jar (with the jar task), then it can be imported into SceneBuilder
 */
// sourceCompatibility = 1.11
// targetCompatibility = 1.11

mainClassName = "org.libmanager.client.App"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.0'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-junit5:4.0.16-alpha'
    testImplementation 'org.testfx:openjfx-monocle:jdk-12.0.1+2'
    testImplementation 'org.assertj:assertj-core:3.18.1'
    testImplementation 'org.mockito:mockito-core:3.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

javafx {
    version = '15'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}